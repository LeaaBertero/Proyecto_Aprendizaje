@page "/api/TDocumentos"
@inject IHttpServicio http

<h3>Lista de Tipos de documentos</h3>
<br />
<a class="btn btn-primary" href="/api/TDocumentos/crear">Nuevo tipo de documento</a>
<br />
<table>
    <tr>
        <th>Código</th>
        <th>Nombre</th>
    </tr>
    @if (Mensaje == "")
    {
        @if (listaDocumentos == null)
        {
            <p>Buscando....</p>
        }
        else if(listaDocumentos.Count == 0)
        {
            <p>No existen tipos de documentos</p>
        }
        else
        {
            @foreach (var item in listaDocumentos)
            {
                <tr>
                    <td>@item.Codigo</td>
                    <td>@item.Nombre</td>
                    <td>
                        <a class="btn btn-primary"
                           href="api/TDocumentos/editar/@item.Id">
                            Editar
                        </a>
                    </td>
                    <td>
                        <button class="btn btn-danger"
                           @onclick = "()=>Eliminar(item)">
                            Borrar
                        </button>
                    </td>
                </tr>
            }
        }
    }
    else
    {
        <p> Error: @Mensaje</p>
    }
</table>

<Confirmacion @ref="confirmacion"
              Titulo="CUIDADO"
              textCancelar="Salir"
              onCancel="Cancelar"
              onConfirm="Borrar">
              <h5>Está por borrar el tipo de documento</h5>
              <br />
              <p>Está seguro?</p>
</Confirmacion>


@code {
    Confirmacion confirmacion;

    List<TDocumento> listaDocumentos;
    TDocumento tDocumento;
    string Mensaje = "";

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        await Leer();
    }

    private async Task Leer()
    {
        var resp = await http.Get<List<TDocumento>>("api/TDocumentos");
        if (!resp.Error)
        {
            listaDocumentos = resp.Respuesta;
        }
        else
        {
            Mensaje = await resp.ObtenerError();
        }
    }

    private async Task Eliminar(TDocumento tdocumento)
    {
        confirmacion.Ver();
    }

    private void Cancelar()
    {
        confirmacion.Ocultar();
    }

    private async Task Borrar()
    {

    }

}
